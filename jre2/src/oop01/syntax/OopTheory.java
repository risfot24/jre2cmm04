package oop01.syntax;
/*
//단답형 대응 방법?
//물어보면..
built in 
조립 pc 를 어셈블리 pc <-> embeded
git에 코드가 내장되게 하는것!!

*/
/*
  
  프로그래밍의 발전 단계
 1. 순차적 : GOTO , Line 번호, Fortran
 2. 구조적 : 함수(Function), main(), 포인터, 고속처리, Embeded
 3. 객체지향 : 클래스(class), Reference, C++ , C#, Java
  
 * */
/*
 객체지향의 개념
 1. 재사용성 : 콤포넌트 (모듈) 지향 설계
 2. 분리가능성 : S/W 모듈이 각각 분리될 수 있음
 
 * */
/*
  개발 순서
  1.설계(Architecture) : 객체 모델링 , pm과 코어 개발자들이 모여서 회의
   클래스 의 "속성" 과 "기능"을 문서상으로 나열 정리
   메소드 Stub(원형, 구조) 생성 
  2.정의 (Definition ): 클래스 형태로 멤변 정의 , 메소드 기능 정의    // 하부에 있는 사람들이.. 코드
  3.구현 (): 정의된 클래스를 이용해서
           메모리상에 객체를 만들고, 객체를 이용한 프로그래밍 작업
**/
/*   
 클래스 구조
    클래스란 ? 사용자 정의 데이터 타입
    객체란 ? 속성과 기능
 클래스 발전단계
    Primitive Data Type
    -> 구조체(기본데이터 타입의 집합처)
    -> 클래스
 
 **/
public class OopTheory {

}
